{
  "version": 3,
  "sources": ["../../@huggingface/hub/dist/browser/index.mjs"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// ../shared/src/base64FromBytes.ts\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin = [];\n    arr.forEach((byte) => {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\n\n// ../shared/src/isBackend.ts\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nvar isWebWorker = typeof self === \"object\" && self.constructor && self.constructor.name === \"DedicatedWorkerGlobalScope\";\nvar isBackend = !isBrowser && !isWebWorker;\n\n// ../shared/src/isFrontend.ts\nvar isFrontend = !isBackend;\n\n// src/consts.ts\nvar HUB_URL = \"https://huggingface.co\";\n\n// src/error.ts\nasync function createApiError(response, opts) {\n  var _a, _b;\n  const error = new HubApiError(response.url, response.status, (_a = response.headers.get(\"X-Request-Id\")) != null ? _a : opts == null ? void 0 : opts.requestId);\n  error.message = `Api error with status ${error.statusCode}.${(opts == null ? void 0 : opts.message) ? ` ${opts.message}.` : \"\"} Request ID: ${error.requestId}, url: ${error.url}`;\n  if ((_b = response.headers.get(\"Content-Type\")) == null ? void 0 : _b.startsWith(\"application/json\")) {\n    const json = await response.json();\n    error.message = json.error || json.message || error.message;\n    error.data = json;\n  } else {\n    error.data = { message: await response.text() };\n  }\n  throw error;\n}\nvar HubApiError = class extends Error {\n  constructor(url, statusCode, requestId, message) {\n    super(message);\n    __publicField(this, \"statusCode\");\n    __publicField(this, \"url\");\n    __publicField(this, \"requestId\");\n    __publicField(this, \"data\");\n    this.statusCode = statusCode;\n    this.requestId = requestId;\n    this.url = url;\n  }\n};\nvar InvalidApiResponseFormatError = class extends Error {\n};\n\n// src/utils/checkCredentials.ts\nfunction checkCredentials(credentials) {\n  if (!credentials || credentials.accessToken === void 0 || credentials.accessToken === null) {\n    return;\n  }\n  if (!credentials.accessToken.startsWith(\"hf_\")) {\n    throw new TypeError(\"Your access token must start with 'hf_'\");\n  }\n}\n\n// src/utils/range.ts\nfunction range(n, b) {\n  return b ? Array(b - n).fill(0).map((_, i) => n + i) : Array(n).fill(0).map((_, i) => i);\n}\n\n// src/utils/chunk.ts\nfunction chunk(arr, chunkSize) {\n  if (isNaN(chunkSize) || chunkSize < 1) {\n    throw new RangeError(\"Invalid chunk size: \" + chunkSize);\n  }\n  if (!arr.length) {\n    return [];\n  }\n  if (arr.length <= chunkSize) {\n    return [arr];\n  }\n  return range(Math.ceil(arr.length / chunkSize)).map((i) => {\n    return arr.slice(i * chunkSize, (i + 1) * chunkSize);\n  });\n}\n\n// src/utils/promisesQueue.ts\nasync function promisesQueue(factories, concurrency) {\n  const results = [];\n  const executing = /* @__PURE__ */ new Set();\n  let index = 0;\n  for (const factory of factories) {\n    const closureIndex = index++;\n    const e = factory().then((r) => {\n      results[closureIndex] = r;\n      executing.delete(e);\n    });\n    executing.add(e);\n    if (executing.size >= concurrency) {\n      await Promise.race(executing);\n    }\n  }\n  await Promise.all(executing);\n  return results;\n}\n\n// src/utils/promisesQueueStreaming.ts\nasync function promisesQueueStreaming(factories, concurrency) {\n  const executing = [];\n  for await (const factory of factories) {\n    const e = factory().then(() => {\n      executing.splice(executing.indexOf(e), 1);\n    });\n    executing.push(e);\n    if (executing.length >= concurrency) {\n      await Promise.race(executing);\n    }\n  }\n  await Promise.all(executing);\n}\n\n// src/utils/eventToGenerator.ts\nasync function* eventToGenerator(cb) {\n  const promises = [];\n  function addPromise() {\n    let resolve2;\n    let reject;\n    const p = new Promise((res, rej) => {\n      resolve2 = res;\n      reject = rej;\n    });\n    promises.push({ p, resolve: resolve2, reject });\n  }\n  addPromise();\n  const callbackRes = Promise.resolve().then(\n    () => cb(\n      (y) => {\n        var _a;\n        addPromise();\n        (_a = promises.at(-2)) == null ? void 0 : _a.resolve({ done: false, value: y });\n      },\n      (r) => {\n        var _a;\n        addPromise();\n        (_a = promises.at(-2)) == null ? void 0 : _a.resolve({ done: true, value: r });\n      },\n      (err) => {\n        var _a;\n        return (_a = promises.shift()) == null ? void 0 : _a.reject(err);\n      }\n    )\n  ).catch((err) => {\n    var _a;\n    return (_a = promises.shift()) == null ? void 0 : _a.reject(err);\n  });\n  while (1) {\n    const p = promises[0];\n    if (!p) {\n      throw new Error(\"Logic error in eventGenerator, promises should never be empty\");\n    }\n    const result = await p.p;\n    promises.shift();\n    if (result.done) {\n      await callbackRes;\n      return result.value;\n    }\n    yield result.value;\n  }\n  throw new Error(\"Unreachable\");\n}\n\n// src/utils/hexFromBytes.ts\nfunction hexFromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"hex\");\n  } else {\n    const bin = [];\n    arr.forEach((byte) => {\n      bin.push(byte.toString(16).padStart(2, \"0\"));\n    });\n    return bin.join(\"\");\n  }\n}\n\n// src/utils/sha256.ts\nvar webWorkerCode = `\n// Would prefer no CDN, but need a clever way to not burden the main file of the bundle\nimportScripts(\"https://cdn.jsdelivr.net/npm/hash-wasm@4/dist/sha256.umd.min.js\");\n\nconst createSHA256 = hashwasm.createSHA256;\n\nself.addEventListener('message', async (event) => {\n\tconst { file } = event.data;\n\tconst sha256 = await createSHA256();\n\tsha256.init();\n\tconst reader = file.stream().getReader();\n\tconst total = file.size;\n\tlet bytesDone = 0;\n\twhile (true) {\n\t\tconst { done, value } = await reader.read();\n\t\tif (done) {\n\t\t\tbreak;\n\t\t}\n\t\tsha256.update(value);\n\t\tbytesDone += value.length;\n\t\tpostMessage({ progress: bytesDone / total });\n\t}\n\tpostMessage({ sha256: sha256.digest('hex') });\n});\n`;\nvar pendingWorkers = [];\nvar runningWorkers = /* @__PURE__ */ new Set();\nvar resolve;\nvar waitPromise = new Promise((r) => {\n  resolve = r;\n});\nasync function getWorker(poolSize) {\n  {\n    const worker2 = pendingWorkers.pop();\n    if (worker2) {\n      runningWorkers.add(worker2);\n      return worker2;\n    }\n  }\n  if (!poolSize) {\n    const worker2 = new Worker(URL.createObjectURL(new Blob([webWorkerCode])));\n    runningWorkers.add(worker2);\n    return worker2;\n  }\n  if (poolSize <= 0) {\n    throw new TypeError(\"Invalid webworker pool size: \" + poolSize);\n  }\n  while (runningWorkers.size >= poolSize) {\n    await waitPromise;\n  }\n  const worker = new Worker(URL.createObjectURL(new Blob([webWorkerCode])));\n  runningWorkers.add(worker);\n  return worker;\n}\nasync function freeWorker(worker, poolSize) {\n  if (!poolSize) {\n    return destroyWorker(worker);\n  }\n  runningWorkers.delete(worker);\n  pendingWorkers.push(worker);\n  const r = resolve;\n  waitPromise = new Promise((r2) => {\n    resolve = r2;\n  });\n  r();\n}\nfunction destroyWorker(worker) {\n  runningWorkers.delete(worker);\n  worker.terminate();\n  const r = resolve;\n  waitPromise = new Promise((r2) => {\n    resolve = r2;\n  });\n  r();\n}\nasync function* sha256(buffer, opts) {\n  var _a, _b;\n  yield 0;\n  const maxCryptoSize = typeof (opts == null ? void 0 : opts.useWebWorker) === \"object\" && (opts == null ? void 0 : opts.useWebWorker.minSize) !== void 0 ? opts.useWebWorker.minSize : 1e7;\n  if (buffer.size < maxCryptoSize && ((_a = globalThis.crypto) == null ? void 0 : _a.subtle)) {\n    const res = hexFromBytes(\n      new Uint8Array(\n        await globalThis.crypto.subtle.digest(\"SHA-256\", buffer instanceof Blob ? await buffer.arrayBuffer() : buffer)\n      )\n    );\n    yield 1;\n    return res;\n  }\n  if (isFrontend) {\n    if (opts == null ? void 0 : opts.useWebWorker) {\n      try {\n        const poolSize = typeof (opts == null ? void 0 : opts.useWebWorker) === \"object\" ? opts.useWebWorker.poolSize : void 0;\n        const worker = await getWorker(poolSize);\n        return yield* eventToGenerator((yieldCallback, returnCallback, rejectCallack) => {\n          worker.addEventListener(\"message\", (event) => {\n            var _a2;\n            if (event.data.sha256) {\n              freeWorker(worker, poolSize);\n              returnCallback(event.data.sha256);\n            } else if (event.data.progress) {\n              yieldCallback(event.data.progress);\n              try {\n                (_a2 = opts.abortSignal) == null ? void 0 : _a2.throwIfAborted();\n              } catch (err) {\n                destroyWorker(worker);\n                rejectCallack(err);\n              }\n            } else {\n              destroyWorker(worker);\n              rejectCallack(event);\n            }\n          });\n          worker.addEventListener(\"error\", (event) => {\n            destroyWorker(worker);\n            rejectCallack(event.error);\n          });\n          worker.postMessage({ file: buffer });\n        });\n      } catch (err) {\n        console.warn(\"Failed to use web worker for sha256\", err);\n      }\n    }\n    if (!wasmModule) {\n      wasmModule = await import(\"hash-wasm\");\n    }\n    const sha2562 = await wasmModule.createSHA256();\n    sha2562.init();\n    const reader = buffer.stream().getReader();\n    const total = buffer.size;\n    let bytesDone = 0;\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) {\n        break;\n      }\n      sha2562.update(value);\n      bytesDone += value.length;\n      yield bytesDone / total;\n      (_b = opts == null ? void 0 : opts.abortSignal) == null ? void 0 : _b.throwIfAborted();\n    }\n    return sha2562.digest(\"hex\");\n  }\n  if (!cryptoModule) {\n    cryptoModule = await import(\"./sha256-node-TNZ2WHTI.mjs\");\n  }\n  return yield* cryptoModule.sha256Node(buffer, { abortSignal: opts == null ? void 0 : opts.abortSignal });\n}\nvar cryptoModule;\nvar wasmModule;\n\n// src/utils/toRepoId.ts\nfunction toRepoId(repo) {\n  if (typeof repo !== \"string\") {\n    return repo;\n  }\n  if (repo.startsWith(\"model/\") || repo.startsWith(\"models/\")) {\n    throw new TypeError(\n      \"A repo designation for a model should not start with 'models/', directly specify the model namespace / name\"\n    );\n  }\n  if (repo.startsWith(\"space/\")) {\n    throw new TypeError(\"Spaces should start with 'spaces/', plural, not 'space/'\");\n  }\n  if (repo.startsWith(\"dataset/\")) {\n    throw new TypeError(\"Datasets should start with 'dataset/', plural, not 'dataset/'\");\n  }\n  const slashes = repo.split(\"/\").length - 1;\n  if (repo.startsWith(\"spaces/\")) {\n    if (slashes !== 2) {\n      throw new TypeError(\"Space Id must include namespace and name of the space\");\n    }\n    return {\n      type: \"space\",\n      name: repo.slice(\"spaces/\".length)\n    };\n  }\n  if (repo.startsWith(\"datasets/\")) {\n    if (slashes > 2) {\n      throw new TypeError(\"Too many slashes in repo designation: \" + repo);\n    }\n    return {\n      type: \"dataset\",\n      name: repo.slice(\"datasets/\".length)\n    };\n  }\n  if (slashes > 1) {\n    throw new TypeError(\"Too many slashes in repo designation: \" + repo);\n  }\n  return {\n    type: \"model\",\n    name: repo\n  };\n}\n\n// src/utils/WebBlob.ts\nvar WebBlob = class extends Blob {\n  constructor(url, start, end, contentType, full, customFetch) {\n    super([]);\n    __publicField(this, \"url\");\n    __publicField(this, \"start\");\n    __publicField(this, \"end\");\n    __publicField(this, \"contentType\");\n    __publicField(this, \"full\");\n    __publicField(this, \"fetch\");\n    this.url = url;\n    this.start = start;\n    this.end = end;\n    this.contentType = contentType;\n    this.full = full;\n    this.fetch = customFetch;\n  }\n  static async create(url, opts) {\n    var _a, _b;\n    const customFetch = (_a = opts == null ? void 0 : opts.fetch) != null ? _a : fetch;\n    const response = await customFetch(url, { method: \"HEAD\" });\n    const size = Number(response.headers.get(\"content-length\"));\n    const contentType = response.headers.get(\"content-type\") || \"\";\n    const supportRange = response.headers.get(\"accept-ranges\") === \"bytes\";\n    if (!supportRange || size < ((_b = opts == null ? void 0 : opts.cacheBelow) != null ? _b : 1e6)) {\n      return await (await customFetch(url)).blob();\n    }\n    return new WebBlob(url, 0, size, contentType, true, customFetch);\n  }\n  get size() {\n    return this.end - this.start;\n  }\n  get type() {\n    return this.contentType;\n  }\n  slice(start = 0, end = this.size) {\n    if (start < 0 || end < 0) {\n      new TypeError(\"Unsupported negative start/end on FileBlob.slice\");\n    }\n    const slice = new WebBlob(\n      this.url,\n      this.start + start,\n      Math.min(this.start + end, this.end),\n      this.contentType,\n      start === 0 && end === this.size ? this.full : false,\n      this.fetch\n    );\n    return slice;\n  }\n  async arrayBuffer() {\n    const result = await this.fetchRange();\n    return result.arrayBuffer();\n  }\n  async text() {\n    const result = await this.fetchRange();\n    return result.text();\n  }\n  stream() {\n    const stream = new TransformStream();\n    this.fetchRange().then((response) => {\n      var _a;\n      return (_a = response.body) == null ? void 0 : _a.pipeThrough(stream);\n    }).catch((error) => stream.writable.abort(error.message));\n    return stream.readable;\n  }\n  fetchRange() {\n    const fetch2 = this.fetch;\n    if (this.full) {\n      return fetch2(this.url);\n    }\n    return fetch2(this.url, {\n      headers: {\n        Range: `bytes=${this.start}-${this.end - 1}`\n      }\n    });\n  }\n};\n\n// src/utils/createBlob.ts\nasync function createBlob(url, opts) {\n  if (url.protocol === \"http:\" || url.protocol === \"https:\") {\n    return WebBlob.create(url, { fetch: opts == null ? void 0 : opts.fetch });\n  }\n  if (isFrontend) {\n    throw new TypeError(`Unsupported URL protocol \"${url.protocol}\"`);\n  }\n  if (url.protocol === \"file:\") {\n    const { FileBlob } = await import(\"./FileBlob-7MRLQ6TG.mjs\");\n    return FileBlob.create(url);\n  }\n  throw new TypeError(`Unsupported URL protocol \"${url.protocol}\"`);\n}\n\n// src/lib/commit.ts\nvar CONCURRENT_SHAS = 5;\nvar CONCURRENT_LFS_UPLOADS = 5;\nvar MULTIPART_PARALLEL_UPLOAD = 5;\nfunction isFileOperation(op) {\n  const ret = op.operation === \"addOrUpdate\";\n  if (ret && !(op.content instanceof Blob)) {\n    throw new TypeError(\"Precondition failed: op.content should be a Blob\");\n  }\n  return ret;\n}\nasync function* commitIter(params) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  checkCredentials(params.credentials);\n  const repoId = toRepoId(params.repo);\n  yield { event: \"phase\", phase: \"preuploading\" };\n  const lfsShas = /* @__PURE__ */ new Map();\n  const abortController = new AbortController();\n  const abortSignal = abortController.signal;\n  if (params.abortSignal) {\n    params.abortSignal.addEventListener(\"abort\", () => abortController.abort());\n  }\n  try {\n    const allOperations = await Promise.all(\n      params.operations.map(async (operation) => {\n        if (operation.operation !== \"addOrUpdate\") {\n          return operation;\n        }\n        if (!(operation.content instanceof URL)) {\n          return { ...operation, content: operation.content };\n        }\n        const lazyBlob = await createBlob(operation.content, { fetch: params.fetch });\n        abortSignal == null ? void 0 : abortSignal.throwIfAborted();\n        return {\n          ...operation,\n          content: lazyBlob\n        };\n      })\n    );\n    const gitAttributes = (_a = allOperations.filter(isFileOperation).find((op) => op.path === \".gitattributes\")) == null ? void 0 : _a.content;\n    for (const operations of chunk(allOperations.filter(isFileOperation), 100)) {\n      const payload = {\n        gitAttributes: gitAttributes && await gitAttributes.text(),\n        files: await Promise.all(\n          operations.map(async (operation) => ({\n            path: operation.path,\n            size: operation.content.size,\n            sample: base64FromBytes(new Uint8Array(await operation.content.slice(0, 512).arrayBuffer()))\n          }))\n        )\n      };\n      abortSignal == null ? void 0 : abortSignal.throwIfAborted();\n      const res = await ((_b = params.fetch) != null ? _b : fetch)(\n        `${(_c = params.hubUrl) != null ? _c : HUB_URL}/api/${repoId.type}s/${repoId.name}/preupload/${encodeURIComponent(\n          (_d = params.branch) != null ? _d : \"main\"\n        )}` + (params.isPullRequest ? \"?create_pr=1\" : \"\"),\n        {\n          method: \"POST\",\n          headers: {\n            ...params.credentials && { Authorization: `Bearer ${params.credentials.accessToken}` },\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload),\n          signal: abortSignal\n        }\n      );\n      if (!res.ok) {\n        throw await createApiError(res);\n      }\n      const json = await res.json();\n      for (const file of json.files) {\n        if (file.uploadMode === \"lfs\") {\n          lfsShas.set(file.path, null);\n        }\n      }\n    }\n    yield { event: \"phase\", phase: \"uploadingLargeFiles\" };\n    for (const operations of chunk(\n      allOperations.filter(isFileOperation).filter((op) => lfsShas.has(op.path)),\n      100\n    )) {\n      const shas = yield* eventToGenerator((yieldCallback, returnCallback, rejectCallack) => {\n        return promisesQueue(\n          operations.map((op) => async () => {\n            const iterator = sha256(op.content, { useWebWorker: params.useWebWorkers, abortSignal });\n            let res2;\n            do {\n              res2 = await iterator.next();\n              if (!res2.done) {\n                yieldCallback({ event: \"fileProgress\", path: op.path, progress: res2.value, state: \"hashing\" });\n              }\n            } while (!res2.done);\n            const sha = res2.value;\n            lfsShas.set(op.path, res2.value);\n            return sha;\n          }),\n          CONCURRENT_SHAS\n        ).then(returnCallback, rejectCallack);\n      });\n      abortSignal == null ? void 0 : abortSignal.throwIfAborted();\n      const payload = {\n        operation: \"upload\",\n        // multipart is a custom protocol for HF\n        transfers: [\"basic\", \"multipart\"],\n        hash_algo: \"sha_256\",\n        ref: {\n          name: (_e = params.branch) != null ? _e : \"main\"\n        },\n        objects: operations.map((op, i) => ({\n          oid: shas[i],\n          size: op.content.size\n        }))\n      };\n      const res = await ((_f = params.fetch) != null ? _f : fetch)(\n        `${(_g = params.hubUrl) != null ? _g : HUB_URL}/${repoId.type === \"model\" ? \"\" : repoId.type + \"s/\"}${repoId.name}.git/info/lfs/objects/batch`,\n        {\n          method: \"POST\",\n          headers: {\n            ...params.credentials && { Authorization: `Bearer ${params.credentials.accessToken}` },\n            Accept: \"application/vnd.git-lfs+json\",\n            \"Content-Type\": \"application/vnd.git-lfs+json\"\n          },\n          body: JSON.stringify(payload),\n          signal: abortSignal\n        }\n      );\n      if (!res.ok) {\n        throw await createApiError(res);\n      }\n      const json = await res.json();\n      const batchRequestId = res.headers.get(\"X-Request-Id\") || void 0;\n      const shaToOperation = new Map(operations.map((op, i) => [shas[i], op]));\n      yield* eventToGenerator((yieldCallback, returnCallback, rejectCallback) => {\n        return promisesQueueStreaming(\n          json.objects.map((obj) => async () => {\n            var _a2, _b2, _c2;\n            const op = shaToOperation.get(obj.oid);\n            if (!op) {\n              throw new InvalidApiResponseFormatError(\"Unrequested object ID in response\");\n            }\n            abortSignal == null ? void 0 : abortSignal.throwIfAborted();\n            if (obj.error) {\n              const errorMessage = `Error while doing LFS batch call for ${operations[shas.indexOf(obj.oid)].path}: ${obj.error.message}${batchRequestId ? ` - Request ID: ${batchRequestId}` : \"\"}`;\n              throw new HubApiError(res.url, obj.error.code, batchRequestId, errorMessage);\n            }\n            if (!((_a2 = obj.actions) == null ? void 0 : _a2.upload)) {\n              yieldCallback({\n                event: \"fileProgress\",\n                path: op.path,\n                progress: 1,\n                state: \"uploading\"\n              });\n              return;\n            }\n            yieldCallback({\n              event: \"fileProgress\",\n              path: op.path,\n              progress: 0,\n              state: \"uploading\"\n            });\n            const content = op.content;\n            const header = obj.actions.upload.header;\n            if (header == null ? void 0 : header.chunk_size) {\n              const chunkSize = parseInt(header.chunk_size);\n              const completionUrl = obj.actions.upload.href;\n              const parts = Object.keys(header).filter((key) => /^[0-9]+$/.test(key));\n              if (parts.length !== Math.ceil(content.size / chunkSize)) {\n                throw new Error(\"Invalid server response to upload large LFS file, wrong number of parts\");\n              }\n              const completeReq = {\n                oid: obj.oid,\n                parts: parts.map((part) => ({\n                  partNumber: +part,\n                  etag: \"\"\n                }))\n              };\n              const progressCallback = (progress) => yieldCallback({ event: \"fileProgress\", path: op.path, progress, state: \"uploading\" });\n              await promisesQueueStreaming(\n                parts.map((part) => async () => {\n                  var _a3;\n                  abortSignal == null ? void 0 : abortSignal.throwIfAborted();\n                  const index = parseInt(part) - 1;\n                  const slice = content.slice(index * chunkSize, (index + 1) * chunkSize);\n                  const res3 = await ((_a3 = params.fetch) != null ? _a3 : fetch)(header[part], {\n                    method: \"PUT\",\n                    /** Unfortunately, browsers don't support our inherited version of Blob in fetch calls */\n                    body: slice instanceof WebBlob && isFrontend ? await slice.arrayBuffer() : slice,\n                    signal: abortSignal,\n                    ...{\n                      progressHint: {\n                        path: op.path,\n                        part: index,\n                        numParts: parts.length,\n                        progressCallback\n                      }\n                      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    }\n                  });\n                  if (!res3.ok) {\n                    throw await createApiError(res3, {\n                      requestId: batchRequestId,\n                      message: `Error while uploading part ${part} of ${operations[shas.indexOf(obj.oid)].path} to LFS storage`\n                    });\n                  }\n                  const eTag = res3.headers.get(\"ETag\");\n                  if (!eTag) {\n                    throw new Error(\"Cannot get ETag of part during multipart upload\");\n                  }\n                  completeReq.parts[Number(part) - 1].etag = eTag;\n                }),\n                MULTIPART_PARALLEL_UPLOAD\n              );\n              abortSignal == null ? void 0 : abortSignal.throwIfAborted();\n              const res2 = await ((_b2 = params.fetch) != null ? _b2 : fetch)(completionUrl, {\n                method: \"POST\",\n                body: JSON.stringify(completeReq),\n                headers: {\n                  Accept: \"application/vnd.git-lfs+json\",\n                  \"Content-Type\": \"application/vnd.git-lfs+json\"\n                },\n                signal: abortSignal\n              });\n              if (!res2.ok) {\n                throw await createApiError(res2, {\n                  requestId: batchRequestId,\n                  message: `Error completing multipart upload of ${operations[shas.indexOf(obj.oid)].path} to LFS storage`\n                });\n              }\n              yieldCallback({\n                event: \"fileProgress\",\n                path: op.path,\n                progress: 1,\n                state: \"uploading\"\n              });\n            } else {\n              const res2 = await ((_c2 = params.fetch) != null ? _c2 : fetch)(obj.actions.upload.href, {\n                method: \"PUT\",\n                headers: {\n                  ...batchRequestId ? { \"X-Request-Id\": batchRequestId } : void 0\n                },\n                /** Unfortunately, browsers don't support our inherited version of Blob in fetch calls */\n                body: content instanceof WebBlob && isFrontend ? await content.arrayBuffer() : content,\n                signal: abortSignal,\n                ...{\n                  progressHint: {\n                    path: op.path,\n                    progressCallback: (progress) => yieldCallback({\n                      event: \"fileProgress\",\n                      path: op.path,\n                      progress,\n                      state: \"uploading\"\n                    })\n                  }\n                  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n              });\n              if (!res2.ok) {\n                throw await createApiError(res2, {\n                  requestId: batchRequestId,\n                  message: `Error while uploading ${operations[shas.indexOf(obj.oid)].path} to LFS storage`\n                });\n              }\n              yieldCallback({\n                event: \"fileProgress\",\n                path: op.path,\n                progress: 1,\n                state: \"uploading\"\n              });\n            }\n          }),\n          CONCURRENT_LFS_UPLOADS\n        ).then(returnCallback, rejectCallback);\n      });\n    }\n    abortSignal == null ? void 0 : abortSignal.throwIfAborted();\n    yield { event: \"phase\", phase: \"committing\" };\n    return yield* eventToGenerator(\n      async (yieldCallback, returnCallback, rejectCallback) => {\n        var _a2, _b2, _c2;\n        return ((_a2 = params.fetch) != null ? _a2 : fetch)(\n          `${(_b2 = params.hubUrl) != null ? _b2 : HUB_URL}/api/${repoId.type}s/${repoId.name}/commit/${encodeURIComponent(\n            (_c2 = params.branch) != null ? _c2 : \"main\"\n          )}` + (params.isPullRequest ? \"?create_pr=1\" : \"\"),\n          {\n            method: \"POST\",\n            headers: {\n              ...params.credentials && { Authorization: `Bearer ${params.credentials.accessToken}` },\n              \"Content-Type\": \"application/x-ndjson\"\n            },\n            body: [\n              {\n                key: \"header\",\n                value: {\n                  summary: params.title,\n                  description: params.description,\n                  parentCommit: params.parentCommit\n                }\n              },\n              ...await Promise.all(\n                allOperations.map((operation) => {\n                  if (isFileOperation(operation)) {\n                    const sha = lfsShas.get(operation.path);\n                    if (sha) {\n                      return {\n                        key: \"lfsFile\",\n                        value: {\n                          path: operation.path,\n                          algo: \"sha256\",\n                          size: operation.content.size,\n                          oid: sha\n                        }\n                      };\n                    }\n                  }\n                  return convertOperationToNdJson(operation);\n                })\n              )\n            ].map((x) => JSON.stringify(x)).join(\"\\n\"),\n            signal: abortSignal,\n            ...{\n              progressHint: {\n                progressCallback: (progress) => {\n                  for (const op of allOperations) {\n                    if (isFileOperation(op) && !lfsShas.has(op.path)) {\n                      yieldCallback({\n                        event: \"fileProgress\",\n                        path: op.path,\n                        progress,\n                        state: \"uploading\"\n                      });\n                    }\n                  }\n                }\n              }\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n          }\n        ).then(async (res) => {\n          if (!res.ok) {\n            throw await createApiError(res);\n          }\n          const json = await res.json();\n          returnCallback({\n            pullRequestUrl: json.pullRequestUrl,\n            commit: {\n              oid: json.commitOid,\n              url: json.commitUrl\n            },\n            hookOutput: json.hookOutput\n          });\n        }).catch(rejectCallback);\n      }\n    );\n  } catch (err) {\n    abortController.abort();\n    throw err;\n  }\n}\nasync function commit(params) {\n  const iterator = commitIter(params);\n  let res = await iterator.next();\n  while (!res.done) {\n    res = await iterator.next();\n  }\n  return res.value;\n}\nasync function convertOperationToNdJson(operation) {\n  switch (operation.operation) {\n    case \"addOrUpdate\": {\n      return {\n        key: \"file\",\n        value: {\n          content: base64FromBytes(new Uint8Array(await operation.content.arrayBuffer())),\n          path: operation.path,\n          encoding: \"base64\"\n        }\n      };\n    }\n    case \"delete\": {\n      return {\n        key: \"deletedFile\",\n        value: {\n          path: operation.path\n        }\n      };\n    }\n    default:\n      throw new TypeError(\"Unknown operation: \" + operation.operation);\n  }\n}\n\n// src/lib/create-repo.ts\nasync function createRepo(params) {\n  var _a, _b;\n  checkCredentials(params.credentials);\n  const repoId = toRepoId(params.repo);\n  const [namespace, repoName] = repoId.name.split(\"/\");\n  if (!namespace || !repoName) {\n    throw new TypeError(\n      `\"${repoId.name}\" is not a fully qualified repo name. It should be of the form \"{namespace}/{repoName}\".`\n    );\n  }\n  const res = await ((_a = params.fetch) != null ? _a : fetch)(`${(_b = params.hubUrl) != null ? _b : HUB_URL}/api/repos/create`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      name: repoName,\n      private: params.private,\n      organization: namespace,\n      license: params.license,\n      ...repoId.type === \"space\" ? {\n        type: \"space\",\n        sdk: \"static\"\n      } : {\n        type: repoId.type\n      },\n      files: params.files ? await Promise.all(\n        params.files.map(async (file) => ({\n          encoding: \"base64\",\n          path: file.path,\n          content: base64FromBytes(\n            new Uint8Array(file.content instanceof Blob ? await file.content.arrayBuffer() : file.content)\n          )\n        }))\n      ) : void 0\n    }),\n    headers: {\n      Authorization: `Bearer ${params.credentials.accessToken}`,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!res.ok) {\n    throw await createApiError(res);\n  }\n  const output = await res.json();\n  return { repoUrl: output.url };\n}\n\n// src/lib/delete-file.ts\nfunction deleteFile(params) {\n  var _a;\n  return commit({\n    credentials: params.credentials,\n    repo: params.repo,\n    operations: [\n      {\n        operation: \"delete\",\n        path: params.path\n      }\n    ],\n    title: (_a = params.commitTitle) != null ? _a : `Delete ${params.path}`,\n    description: params.commitDescription,\n    hubUrl: params.hubUrl,\n    branch: params.branch,\n    isPullRequest: params.isPullRequest,\n    parentCommit: params.parentCommit,\n    fetch: params.fetch\n  });\n}\n\n// src/lib/delete-files.ts\nfunction deleteFiles(params) {\n  var _a;\n  return commit({\n    credentials: params.credentials,\n    repo: params.repo,\n    operations: params.paths.map((path) => ({\n      operation: \"delete\",\n      path\n    })),\n    title: (_a = params.commitTitle) != null ? _a : `Deletes ${params.paths.length} files`,\n    description: params.commitDescription,\n    hubUrl: params.hubUrl,\n    branch: params.branch,\n    isPullRequest: params.isPullRequest,\n    parentCommit: params.parentCommit,\n    fetch: params.fetch\n  });\n}\n\n// src/lib/delete-repo.ts\nasync function deleteRepo(params) {\n  var _a, _b;\n  checkCredentials(params.credentials);\n  const repoId = toRepoId(params.repo);\n  const [namespace, repoName] = repoId.name.split(\"/\");\n  const res = await ((_a = params.fetch) != null ? _a : fetch)(`${(_b = params.hubUrl) != null ? _b : HUB_URL}/api/repos/delete`, {\n    method: \"DELETE\",\n    body: JSON.stringify({\n      name: repoName,\n      organization: namespace,\n      type: repoId.type\n    }),\n    headers: {\n      Authorization: `Bearer ${params.credentials.accessToken}`,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!res.ok) {\n    throw await createApiError(res);\n  }\n}\n\n// src/lib/download-file.ts\nasync function downloadFile(params) {\n  var _a, _b, _c;\n  checkCredentials(params.credentials);\n  const repoId = toRepoId(params.repo);\n  const url = `${(_a = params.hubUrl) != null ? _a : HUB_URL}/${repoId.type === \"model\" ? \"\" : `${repoId.type}s/`}${repoId.name}/${params.raw ? \"raw\" : \"resolve\"}/${encodeURIComponent((_b = params.revision) != null ? _b : \"main\")}/${params.path}`;\n  const resp = await ((_c = params.fetch) != null ? _c : fetch)(url, {\n    headers: {\n      ...params.credentials ? {\n        Authorization: `Bearer ${params.credentials.accessToken}`\n      } : {},\n      ...params.range ? {\n        Range: `bytes=${params.range[0]}-${params.range[1]}`\n      } : {}\n    }\n  });\n  if (resp.status === 404 && resp.headers.get(\"X-Error-Code\") === \"EntryNotFound\") {\n    return null;\n  } else if (!resp.ok) {\n    throw await createApiError(resp);\n  }\n  return resp;\n}\n\n// src/lib/file-download-info.ts\nasync function fileDownloadInfo(params) {\n  var _a, _b, _c;\n  checkCredentials(params.credentials);\n  const repoId = toRepoId(params.repo);\n  const hubUrl = (_a = params.hubUrl) != null ? _a : HUB_URL;\n  const url = `${hubUrl}/${repoId.type === \"model\" ? \"\" : `${repoId.type}s/`}${repoId.name}/${params.raw ? \"raw\" : \"resolve\"}/${encodeURIComponent((_b = params.revision) != null ? _b : \"main\")}/${params.path}` + (params.noContentDisposition ? \"?noContentDisposition=1\" : \"\");\n  const resp = await ((_c = params.fetch) != null ? _c : fetch)(url, {\n    method: \"GET\",\n    headers: params.credentials ? {\n      Authorization: `Bearer ${params.credentials.accessToken}`,\n      Range: \"bytes=0-0\"\n    } : {}\n  });\n  if (resp.status === 404 && resp.headers.get(\"X-Error-Code\") === \"EntryNotFound\") {\n    return null;\n  }\n  if (!resp.ok) {\n    throw await createApiError(resp);\n  }\n  const etag = resp.headers.get(\"ETag\");\n  if (!etag) {\n    throw new InvalidApiResponseFormatError(\"Expected ETag\");\n  }\n  const sizeHeader = resp.headers.get(\"Content-Length\");\n  if (!sizeHeader) {\n    throw new InvalidApiResponseFormatError(\"Expected size information\");\n  }\n  const size = parseInt(sizeHeader);\n  if (isNaN(size)) {\n    throw new InvalidApiResponseFormatError(\"Invalid file size received\");\n  }\n  return {\n    etag,\n    size,\n    downloadLink: new URL(resp.url).hostname !== new URL(hubUrl).hostname ? resp.url : null\n  };\n}\n\n// src/lib/file-exists.ts\nasync function fileExists(params) {\n  var _a, _b, _c;\n  checkCredentials(params.credentials);\n  const repoId = toRepoId(params.repo);\n  const hubUrl = (_a = params.hubUrl) != null ? _a : HUB_URL;\n  const url = `${hubUrl}/${repoId.type === \"model\" ? \"\" : `${repoId.type}s/`}${repoId.name}/raw/${encodeURIComponent(\n    (_b = params.revision) != null ? _b : \"main\"\n  )}/${params.path}`;\n  const resp = await ((_c = params.fetch) != null ? _c : fetch)(url, {\n    method: \"HEAD\",\n    headers: params.credentials ? { Authorization: `Bearer ${params.credentials.accessToken}` } : {}\n  });\n  if (resp.status === 404) {\n    return false;\n  }\n  if (!resp.ok) {\n    throw await createApiError(resp);\n  }\n  return true;\n}\n\n// src/utils/parseLinkHeader.ts\nfunction parseLinkHeader(header) {\n  const regex = /<(https?:[/][/][^>]+)>;\\s+rel=\"([^\"]+)\"/g;\n  return Object.fromEntries([...header.matchAll(regex)].map(([, url, rel]) => [rel, url]));\n}\n\n// src/lib/list-datasets.ts\nvar EXPAND_KEYS = [\"private\", \"downloads\", \"gated\", \"likes\", \"lastModified\"];\nasync function* listDatasets(params) {\n  var _a, _b;\n  checkCredentials(params == null ? void 0 : params.credentials);\n  const search = new URLSearchParams([\n    ...Object.entries({\n      limit: \"500\",\n      ...((_a = params == null ? void 0 : params.search) == null ? void 0 : _a.owner) ? { author: params.search.owner } : void 0\n    }),\n    ...EXPAND_KEYS.map((val) => [\"expand\", val])\n  ]).toString();\n  let url = `${(params == null ? void 0 : params.hubUrl) || HUB_URL}/api/datasets` + (search ? \"?\" + search : \"\");\n  while (url) {\n    const res = await ((_b = params == null ? void 0 : params.fetch) != null ? _b : fetch)(url, {\n      headers: {\n        accept: \"application/json\",\n        ...(params == null ? void 0 : params.credentials) ? { Authorization: `Bearer ${params.credentials.accessToken}` } : void 0\n      }\n    });\n    if (!res.ok) {\n      throw createApiError(res);\n    }\n    const items = await res.json();\n    for (const item of items) {\n      yield {\n        id: item._id,\n        name: item.id,\n        private: item.private,\n        downloads: item.downloads,\n        likes: item.likes,\n        gated: item.gated,\n        updatedAt: new Date(item.lastModified)\n      };\n    }\n    const linkHeader = res.headers.get(\"Link\");\n    url = linkHeader ? parseLinkHeader(linkHeader).next : void 0;\n  }\n}\n\n// src/lib/list-files.ts\nasync function* listFiles(params) {\n  var _a;\n  checkCredentials(params.credentials);\n  const repoId = toRepoId(params.repo);\n  let url = `${params.hubUrl || HUB_URL}/api/${repoId.type}s/${repoId.name}/tree/${params.revision || \"main\"}${params.path ? \"/\" + params.path : \"\"}?recursive=${!!params.recursive}&expand=${!!params.expand}`;\n  while (url) {\n    const res = await ((_a = params.fetch) != null ? _a : fetch)(url, {\n      headers: {\n        accept: \"application/json\",\n        ...params.credentials ? { Authorization: `Bearer ${params.credentials.accessToken}` } : void 0\n      }\n    });\n    if (!res.ok) {\n      throw createApiError(res);\n    }\n    const items = await res.json();\n    for (const item of items) {\n      yield item;\n    }\n    const linkHeader = res.headers.get(\"Link\");\n    url = linkHeader ? parseLinkHeader(linkHeader).next : void 0;\n  }\n}\n\n// src/lib/list-models.ts\nvar EXPAND_KEYS2 = [\"pipeline_tag\", \"private\", \"gated\", \"downloads\", \"likes\"];\nasync function* listModels(params) {\n  var _a, _b, _c;\n  checkCredentials(params == null ? void 0 : params.credentials);\n  const search = new URLSearchParams([\n    ...Object.entries({\n      limit: \"500\",\n      ...((_a = params == null ? void 0 : params.search) == null ? void 0 : _a.owner) ? { author: params.search.owner } : void 0,\n      ...((_b = params == null ? void 0 : params.search) == null ? void 0 : _b.task) ? { pipeline_tag: params.search.task } : void 0\n    }),\n    ...EXPAND_KEYS2.map((val) => [\"expand\", val])\n  ]).toString();\n  let url = `${(params == null ? void 0 : params.hubUrl) || HUB_URL}/api/models?${search}`;\n  while (url) {\n    const res = await ((_c = params == null ? void 0 : params.fetch) != null ? _c : fetch)(url, {\n      headers: {\n        accept: \"application/json\",\n        ...(params == null ? void 0 : params.credentials) ? { Authorization: `Bearer ${params.credentials.accessToken}` } : void 0\n      }\n    });\n    if (!res.ok) {\n      throw createApiError(res);\n    }\n    const items = await res.json();\n    for (const item of items) {\n      yield {\n        id: item._id,\n        name: item.id,\n        private: item.private,\n        task: item.pipeline_tag,\n        downloads: item.downloads,\n        gated: item.gated,\n        likes: item.likes,\n        updatedAt: new Date(item.lastModified)\n      };\n    }\n    const linkHeader = res.headers.get(\"Link\");\n    url = linkHeader ? parseLinkHeader(linkHeader).next : void 0;\n  }\n}\n\n// src/utils/pick.ts\nfunction pick(o, props) {\n  return Object.assign(\n    {},\n    ...props.map((prop) => {\n      if (o[prop] !== void 0) {\n        return { [prop]: o[prop] };\n      }\n    })\n  );\n}\n\n// src/lib/list-spaces.ts\nvar EXPAND_KEYS3 = [\"sdk\", \"likes\", \"private\", \"lastModified\"];\nasync function* listSpaces(params) {\n  var _a, _b, _c;\n  checkCredentials(params == null ? void 0 : params.credentials);\n  const search = new URLSearchParams([\n    ...Object.entries({ limit: \"500\", ...((_a = params == null ? void 0 : params.search) == null ? void 0 : _a.owner) ? { author: params.search.owner } : void 0 }),\n    ...[...EXPAND_KEYS3, ...(_b = params == null ? void 0 : params.additionalFields) != null ? _b : []].map((val) => [\"expand\", val])\n  ]).toString();\n  let url = `${(params == null ? void 0 : params.hubUrl) || HUB_URL}/api/spaces?${search}`;\n  while (url) {\n    const res = await ((_c = params == null ? void 0 : params.fetch) != null ? _c : fetch)(url, {\n      headers: {\n        accept: \"application/json\",\n        ...(params == null ? void 0 : params.credentials) ? { Authorization: `Bearer ${params.credentials.accessToken}` } : void 0\n      }\n    });\n    if (!res.ok) {\n      throw createApiError(res);\n    }\n    const items = await res.json();\n    for (const item of items) {\n      yield {\n        ...(params == null ? void 0 : params.additionalFields) && pick(item, params.additionalFields),\n        id: item._id,\n        name: item.id,\n        sdk: item.sdk,\n        likes: item.likes,\n        private: item.private,\n        updatedAt: new Date(item.lastModified)\n      };\n    }\n    const linkHeader = res.headers.get(\"Link\");\n    url = linkHeader ? parseLinkHeader(linkHeader).next : void 0;\n  }\n}\n\n// src/utils/typedInclude.ts\nfunction typedInclude(arr, v) {\n  return arr.includes(v);\n}\n\n// src/utils/omit.ts\nfunction omit(o, props) {\n  const propsArr = Array.isArray(props) ? props : [props];\n  const letsKeep = Object.keys(o).filter((prop) => !typedInclude(propsArr, prop));\n  return pick(o, letsKeep);\n}\n\n// src/utils/typedEntries.ts\nfunction typedEntries(obj) {\n  return Object.entries(obj);\n}\n\n// src/lib/parse-safetensors-metadata.ts\nvar SINGLE_FILE = \"model.safetensors\";\nvar INDEX_FILE = \"model.safetensors.index.json\";\nvar PARALLEL_DOWNLOADS = 5;\nvar MAX_HEADER_LENGTH = 25e6;\nvar SafetensorParseError = class extends Error {\n};\nasync function parseSingleFile(path, params) {\n  const firstResp = await downloadFile({\n    ...params,\n    path,\n    range: [0, 7]\n  });\n  if (!firstResp) {\n    throw new SafetensorParseError(`Failed to parse file ${path}: failed to fetch safetensors header length.`);\n  }\n  const bufLengthOfHeaderLE = await firstResp.arrayBuffer();\n  const lengthOfHeader = new DataView(bufLengthOfHeaderLE).getBigUint64(0, true);\n  if (lengthOfHeader <= 0) {\n    throw new SafetensorParseError(`Failed to parse file ${path}: safetensors header is malformed.`);\n  }\n  if (lengthOfHeader > MAX_HEADER_LENGTH) {\n    throw new SafetensorParseError(\n      `Failed to parse file ${path}: safetensor header is too big. Maximum supported size is ${MAX_HEADER_LENGTH} bytes.`\n    );\n  }\n  const secondResp = await downloadFile({ ...params, path, range: [8, 7 + Number(lengthOfHeader)] });\n  if (!secondResp) {\n    throw new SafetensorParseError(`Failed to parse file ${path}: failed to fetch safetensors header.`);\n  }\n  try {\n    const header = await secondResp.json();\n    return header;\n  } catch (err) {\n    throw new SafetensorParseError(`Failed to parse file ${path}: safetensors header is not valid JSON.`);\n  }\n}\nasync function parseShardedIndex(path, params) {\n  const indexResp = await downloadFile({\n    ...params,\n    path\n  });\n  if (!indexResp) {\n    throw new SafetensorParseError(`Failed to parse file ${path}: failed to fetch safetensors index.`);\n  }\n  const index = await indexResp.json();\n  const filenames = [...new Set(Object.values(index.weight_map))];\n  const shardedMap = Object.fromEntries(\n    await promisesQueue(\n      filenames.map(\n        (filename) => async () => [filename, await parseSingleFile(filename, params)]\n      ),\n      PARALLEL_DOWNLOADS\n    )\n  );\n  return { index, headers: shardedMap };\n}\nasync function parseSafetensorsMetadata(params) {\n  checkCredentials(params.credentials);\n  const repoId = toRepoId(params.repo);\n  if (repoId.type !== \"model\") {\n    throw new TypeError(\"Only model repos should contain safetensors files.\");\n  }\n  if (await fileExists({ ...params, path: SINGLE_FILE })) {\n    const header = await parseSingleFile(SINGLE_FILE, params);\n    return {\n      sharded: false,\n      header,\n      ...params.computeParametersCount && {\n        parameterCount: computeNumOfParamsByDtypeSingleFile(header)\n      }\n    };\n  } else if (await fileExists({ ...params, path: INDEX_FILE })) {\n    const { index, headers } = await parseShardedIndex(INDEX_FILE, params);\n    return {\n      sharded: true,\n      index,\n      headers,\n      ...params.computeParametersCount && {\n        parameterCount: computeNumOfParamsByDtypeSharded(headers)\n      }\n    };\n  } else {\n    throw new Error(\"model id does not seem to contain safetensors weights\");\n  }\n}\nfunction computeNumOfParamsByDtypeSingleFile(header) {\n  var _a;\n  const counter = {};\n  const tensors = omit(header, \"__metadata__\");\n  for (const [, v] of typedEntries(tensors)) {\n    if (v.shape.length === 0) {\n      continue;\n    }\n    counter[v.dtype] = ((_a = counter[v.dtype]) != null ? _a : 0) + v.shape.reduce((a, b) => a * b);\n  }\n  return counter;\n}\nfunction computeNumOfParamsByDtypeSharded(shardedMap) {\n  var _a;\n  const counter = {};\n  for (const header of Object.values(shardedMap)) {\n    for (const [k, v] of typedEntries(computeNumOfParamsByDtypeSingleFile(header))) {\n      counter[k] = ((_a = counter[k]) != null ? _a : 0) + (v != null ? v : 0);\n    }\n  }\n  return counter;\n}\n\n// src/lib/upload-file.ts\nfunction uploadFile(params) {\n  var _a, _b;\n  const path = params.file instanceof URL ? (_a = params.file.pathname.split(\"/\").at(-1)) != null ? _a : \"file\" : \"path\" in params.file ? params.file.path : params.file.name;\n  return commit({\n    credentials: params.credentials,\n    repo: params.repo,\n    operations: [\n      {\n        operation: \"addOrUpdate\",\n        path,\n        content: \"content\" in params.file ? params.file.content : params.file\n      }\n    ],\n    title: (_b = params.commitTitle) != null ? _b : `Add ${path}`,\n    description: params.commitDescription,\n    hubUrl: params.hubUrl,\n    branch: params.branch,\n    isPullRequest: params.isPullRequest,\n    parentCommit: params.parentCommit,\n    fetch: params.fetch,\n    useWebWorkers: params.useWebWorkers,\n    abortSignal: params.abortSignal\n  });\n}\n\n// src/lib/upload-files.ts\nfunction uploadFiles(params) {\n  var _a;\n  return commit({\n    credentials: params.credentials,\n    repo: params.repo,\n    operations: params.files.map((file) => {\n      var _a2;\n      return {\n        operation: \"addOrUpdate\",\n        path: file instanceof URL ? (_a2 = file.pathname.split(\"/\").at(-1)) != null ? _a2 : \"file\" : \"path\" in file ? file.path : file.name,\n        content: \"content\" in file ? file.content : file\n      };\n    }),\n    title: (_a = params.commitTitle) != null ? _a : `Add ${params.files.length} files`,\n    description: params.commitDescription,\n    hubUrl: params.hubUrl,\n    branch: params.branch,\n    isPullRequest: params.isPullRequest,\n    parentCommit: params.parentCommit,\n    fetch: params.fetch,\n    useWebWorkers: params.useWebWorkers,\n    abortSignal: params.abortSignal\n  });\n}\n\n// src/lib/upload-files-with-progress.ts\nvar multipartUploadTracking = /* @__PURE__ */ new WeakMap();\nasync function* uploadFilesWithProgress(params) {\n  var _a;\n  return yield* commitIter({\n    credentials: params.credentials,\n    repo: params.repo,\n    operations: params.files.map((file) => {\n      var _a2;\n      return {\n        operation: \"addOrUpdate\",\n        path: file instanceof URL ? (_a2 = file.pathname.split(\"/\").at(-1)) != null ? _a2 : \"file\" : \"path\" in file ? file.path : file.name,\n        content: \"content\" in file ? file.content : file\n      };\n    }),\n    title: (_a = params.commitTitle) != null ? _a : `Add ${params.files.length} files`,\n    description: params.commitDescription,\n    hubUrl: params.hubUrl,\n    branch: params.branch,\n    isPullRequest: params.isPullRequest,\n    parentCommit: params.parentCommit,\n    useWebWorkers: params.useWebWorkers,\n    abortSignal: params.abortSignal,\n    fetch: async (input, init) => {\n      var _a2;\n      if (!init) {\n        return fetch(input);\n      }\n      if (!typedInclude([\"PUT\", \"POST\"], init.method) || !(\"progressHint\" in init) || !init.progressHint || typeof XMLHttpRequest === \"undefined\" || typeof input !== \"string\" || !(init.body instanceof ArrayBuffer) && !(init.body instanceof Blob) && !(init.body instanceof File) && typeof init.body !== \"string\") {\n        return fetch(input, init);\n      }\n      const progressHint = init.progressHint;\n      const progressCallback = progressHint.progressCallback;\n      const xhr = new XMLHttpRequest();\n      xhr.upload.addEventListener(\"progress\", (event) => {\n        if (event.lengthComputable) {\n          if (progressHint.part !== void 0) {\n            let tracking = multipartUploadTracking.get(progressCallback);\n            if (!tracking) {\n              tracking = { numParts: progressHint.numParts, partsProgress: {} };\n              multipartUploadTracking.set(progressCallback, tracking);\n            }\n            tracking.partsProgress[progressHint.part] = event.loaded / event.total;\n            let totalProgress = 0;\n            for (const partProgress of Object.values(tracking.partsProgress)) {\n              totalProgress += partProgress;\n            }\n            if (totalProgress === tracking.numParts) {\n              progressCallback(0.9999999999);\n            } else {\n              progressCallback(totalProgress / tracking.numParts);\n            }\n          } else {\n            if (event.loaded === event.total) {\n              progressCallback(0.9999999999);\n            } else {\n              progressCallback(event.loaded / event.total);\n            }\n          }\n        }\n      });\n      xhr.open(init.method, input, true);\n      if (init.headers) {\n        const headers = new Headers(init.headers);\n        headers.forEach((value, key) => {\n          xhr.setRequestHeader(key, value);\n        });\n      }\n      (_a2 = init.signal) == null ? void 0 : _a2.throwIfAborted();\n      xhr.send(init.body);\n      return new Promise((resolve2, reject) => {\n        xhr.addEventListener(\"load\", () => {\n          resolve2(\n            new Response(xhr.responseText, {\n              status: xhr.status,\n              statusText: xhr.statusText,\n              headers: Object.fromEntries(\n                xhr.getAllResponseHeaders().trim().split(\"\\n\").map((header) => [header.slice(0, header.indexOf(\":\")), header.slice(header.indexOf(\":\") + 1).trim()])\n              )\n            })\n          );\n        });\n        xhr.addEventListener(\"error\", () => {\n          reject(new Error(xhr.statusText));\n        });\n        if (init.signal) {\n          init.signal.addEventListener(\"abort\", () => {\n            var _a3;\n            xhr.abort();\n            try {\n              (_a3 = init.signal) == null ? void 0 : _a3.throwIfAborted();\n            } catch (err) {\n              reject(err);\n            }\n          });\n        }\n      });\n    }\n  });\n}\n\n// src/lib/who-am-i.ts\nasync function whoAmI(params) {\n  var _a, _b, _c;\n  checkCredentials(params.credentials);\n  const res = await ((_a = params.fetch) != null ? _a : fetch)(`${(_b = params.hubUrl) != null ? _b : HUB_URL}/api/whoami-v2`, {\n    headers: {\n      Authorization: `Bearer ${params.credentials.accessToken}`\n    }\n  });\n  if (!res.ok) {\n    throw await createApiError(res);\n  }\n  const response = await res.json();\n  if (typeof ((_c = response.auth.accessToken) == null ? void 0 : _c.expiration) === \"string\") {\n    response.auth.accessToken.expiration = new Date(response.auth.accessToken.expiration);\n  }\n  return response;\n}\nexport {\n  HubApiError,\n  InvalidApiResponseFormatError,\n  commit,\n  commitIter,\n  createRepo,\n  deleteFile,\n  deleteFiles,\n  deleteRepo,\n  downloadFile,\n  fileDownloadInfo,\n  fileExists,\n  listDatasets,\n  listFiles,\n  listModels,\n  listSpaces,\n  parseSafetensorsMetadata,\n  uploadFile,\n  uploadFiles,\n  uploadFilesWithProgress,\n  whoAmI\n};\n"],
  "mappings": "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",
  "names": []
}
